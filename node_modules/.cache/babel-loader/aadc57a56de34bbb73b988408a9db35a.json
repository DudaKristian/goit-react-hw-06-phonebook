{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Phonebook\\\\Phonebook.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport shortId from \"shortid\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Phonebook = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = shortId.generate();\n  const numberInputId = shortId.generate();\n\n  const onInputChange = e => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHandle = e => {\n    e.preventDefault();\n    const contact = {\n      name: name,\n      number: number,\n      id: shortId.generate()\n    };\n    this.props.addContact(contact);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: nameInputId,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: name,\n          onChange: onInputChange,\n          id: nameInputId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: numberInputId,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          value: number,\n          id: numberInputId,\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Phonebook, \"s60cmfhvA68cA+XjWbsAw+FD2C0=\");\n\n_c = Phonebook;\nPhonebook.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\nexport default Phonebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonebook\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-04-phonebook/src/components/Phonebook/Phonebook.jsx"],"names":["useState","shortId","PropTypes","Phonebook","name","setName","number","setNumber","nameInputId","generate","numberInputId","onInputChange","e","target","value","onSubmitHandle","preventDefault","contact","id","props","addContact","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,WAAW,GAAGP,OAAO,CAACQ,QAAR,EAApB;AACA,QAAMC,aAAa,GAAGT,OAAO,CAACQ,QAAR,EAAtB;;AAEA,QAAME,aAAa,GAAGC,CAAC,IAAI;AACvB,YAAQA,CAAC,CAACC,MAAF,CAAST,IAAjB;AACI,WAAK,MAAL;AACIC,QAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACA;;AACJ,WAAK,QAAL;AACIP,QAAAA,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACA;;AACJ;AACI;AARR;AAUH,GAXD;;AAaA,QAAMC,cAAc,GAAGH,CAAC,IAAI;AAE5BA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,OAAO,GAAG;AAChBb,MAAAA,IAAI,EAAEA,IADU;AAEhBE,MAAAA,MAAM,EAAEA,MAFQ;AAGhBY,MAAAA,EAAE,EAAEjB,OAAO,CAACQ,QAAR;AAHY,KAAhB;AAKA,SAAKU,KAAL,CAAWC,UAAX,CAAsBH,OAAtB;AAEAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AAEC,GAdD;;AAgBI,sBACI;AAAA,2BAEI;AAAM,MAAA,QAAQ,EAAEQ,cAAhB;AAAA,8BACA;AAAO,QAAA,OAAO,EAAEP,WAAhB;AAAA,wCAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,OAAO,EAAC,wHAHZ;AAII,UAAA,KAAK,EAAC,wIAJV;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,KAAK,EAAEJ,IANX;AAOI,UAAA,QAAQ,EAAEO,aAPd;AAQI,UAAA,EAAE,EAAEH;AARR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAcA;AAAA;AAAA;AAAA;AAAA,cAdA,eAeA;AAAO,QAAA,OAAO,EAAEE,aAAhB;AAAA,0CAEI;AACI,UAAA,IAAI,EAAC,KADT;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,OAAO,EAAC,wFAHZ;AAII,UAAA,KAAK,EAAC,8FAJV;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,KAAK,EAAEJ,MANX;AAOI,UAAA,EAAE,EAAEI,aAPR;AAQI,UAAA,QAAQ,EAAEC;AARd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfA,eA4BA;AAAA;AAAA;AAAA;AAAA,cA5BA,eA6BA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAzEL;;GAAMR,S;;KAAAA,S;AA2ENA,SAAS,CAACkB,SAAV,GAAsB;AAClBD,EAAAA,UAAU,EAAElB,SAAS,CAACoB,IAAV,CAAeC;AADT,CAAtB;AAIA,eAAepB,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport shortId from \"shortid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Phonebook = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n\r\n    const nameInputId = shortId.generate();\r\n    const numberInputId = shortId.generate();\r\n\r\n    const onInputChange = e => {\r\n        switch (e.target.name) {\r\n            case \"name\":\r\n                setName(e.target.value)\r\n                break;\r\n            case \"number\":\r\n                setNumber(e.target.value)\r\n                break;\r\n            default:\r\n                return;\r\n        }    \r\n    }\r\n    \r\n    const onSubmitHandle = e => {\r\n\r\n    e.preventDefault();\r\n        \r\n    const contact = {\r\n    name: name,\r\n    number: number,\r\n    id: shortId.generate(),\r\n    }\r\n    this.props.addContact(contact)\r\n\r\n    setName(\"\")\r\n    setNumber(\"\")\r\n\r\n    };\r\n\r\n        return (\r\n            <div>\r\n            \r\n                <form onSubmit={onSubmitHandle}>\r\n                <label htmlFor={nameInputId}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                        value={name}\r\n                        onChange={onInputChange}\r\n                        id={nameInputId}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label htmlFor={numberInputId}>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                        value={number}\r\n                        id={numberInputId}\r\n                        onChange={onInputChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n            </div>\r\n        )       \r\n    }\r\n\r\nPhonebook.propTypes = {\r\n    addContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Phonebook\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}