{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Phonebook from \"./Phonebook/Phonebook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(''); // const onFilterChange = e => {\n  //   setFilter(e.target.value)\n  // }\n\n  const addContact = data => {\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n\n    if (!contactName.includes(data.name.toLowerCase())) {\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [data, ...contacts]\n        };\n      });\n    } else {\n      return alert(`${data.name} is allready in contacts`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Phonebook, {\n      addContact: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: e => setFilter(e.target.value),\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      filter: filter,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}; // class App extends React.Component{\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   }\n//   onFilterChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value })\n//   };\n//   addContact = data => {\n//     const contactName =\n//       this.state.contacts.map(contact =>\n//       contact.name.toLowerCase())\n//     if (!contactName.includes(data.name.toLowerCase())) {\n//       this.setState(({ contacts }) => ({\n//       contacts: [data, ...contacts],\n//       }))\n//     }\n//     else {\n//       return alert(`${data.name} is allready in contacts`)\n//     } \n//   };\n//   filter = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n//   onDelete = id => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== id)\n//     }))\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//   }\n//   };\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"))\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts })\n//     }\n//   }\n//   render() {\n//     const filter = this.filter();\n//     return (\n//       <div>\n//         <h1>Phonebook</h1>\n//         <Phonebook addContact={this.addContact} />\n//         <h2>Contacts</h2>\n//         <Filter onChange={this.onFilterChange} filter={this.state.filter} />\n//         <ContactList filter={filter} onDelete={this.onDelete} />\n//       </div>\n//     )\n//   }\n// }\n\n\n_s(App, \"ZsKBdywAlDvPuHnpQ3X5XCAxubs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["React","useState","ContactList","Filter","Phonebook","App","contacts","setContacts","filter","setFilter","addContact","data","contactName","map","contact","name","toLowerCase","includes","setState","alert","e","target","value","onDelete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAHgB,CAKhB;AACA;AACA;;AAEF,QAAMS,UAAU,GAAGC,IAAI,IAAI;AACvB,UAAMC,WAAW,GACfN,QAAQ,CAACO,GAAT,CAAaC,OAAO,IACpBA,OAAO,CAACC,IAAR,CAAaC,WAAb,EADA,CADF;;AAGA,QAAI,CAACJ,WAAW,CAACK,QAAZ,CAAqBN,IAAI,CAACI,IAAL,CAAUC,WAAV,EAArB,CAAL,EAAoD;AAClD,WAAKE,QAAL,CAAc;AAAA,YAAC;AAAEZ,UAAAA;AAAF,SAAD;AAAA,eAAmB;AACjCA,UAAAA,QAAQ,EAAE,CAACK,IAAD,EAAO,GAAGL,QAAV;AADuB,SAAnB;AAAA,OAAd;AAGD,KAJD,MAKK;AACH,aAAOa,KAAK,CAAE,GAAER,IAAI,CAACI,IAAK,0BAAd,CAAZ;AACD;AAEF,GAbH;;AAeE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEL;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEU,CAAC,IAAIX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;AAAkD,MAAA,MAAM,EAAEd;AAA1D;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,MAArB;AAA6B,MAAA,QAAQ,EAAEe;AAAvC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjCD,C,CAkCA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxGMlB,G;;KAAAA,G;AA0GN,eAAeA,GAAf","sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Phonebook from \"./Phonebook/Phonebook\";\r\n\r\nconst App = () => {\r\n  \r\n  const [contacts, setContacts] = useState([])\r\n  const [filter, setFilter] = useState('')\r\n\r\n  // const onFilterChange = e => {\r\n  //   setFilter(e.target.value)\r\n  // }\r\n  \r\nconst addContact = data => {\r\n    const contactName =\r\n      contacts.map(contact =>\r\n      contact.name.toLowerCase())\r\n    if (!contactName.includes(data.name.toLowerCase())) {\r\n      this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n      }))\r\n    }\r\n    else {\r\n      return alert(`${data.name} is allready in contacts`)\r\n    } \r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Phonebook addContact={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={e => setFilter(e.target.value)} filter={filter} />\r\n      <ContactList filter={filter} onDelete={onDelete} />\r\n    </div>\r\n  )\r\n}\r\n// class App extends React.Component{\r\n\r\n//   state = {\r\n//     contacts: [],\r\n//     filter: '',\r\n//   }\r\n\r\n//   onFilterChange = e => {\r\n//     const { name, value } = e.target;\r\n\r\n//     this.setState({ [name]: value })\r\n//   };\r\n  \r\n//   addContact = data => {\r\n//     const contactName =\r\n//       this.state.contacts.map(contact =>\r\n//       contact.name.toLowerCase())\r\n//     if (!contactName.includes(data.name.toLowerCase())) {\r\n//       this.setState(({ contacts }) => ({\r\n//       contacts: [data, ...contacts],\r\n//       }))\r\n//     }\r\n//     else {\r\n//       return alert(`${data.name} is allready in contacts`)\r\n//     } \r\n    \r\n//   };\r\n\r\n//   filter = () => {\r\n//     const { contacts, filter } = this.state;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n  \r\n//   onDelete = id => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n//     }))\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n//   }\r\n//   };\r\n\r\n//   componentDidMount() {\r\n    \r\n//     const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"))\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts })\r\n//     }\r\n    \r\n//   }\r\n\r\n//   render() {\r\n//     const filter = this.filter();\r\n    \r\n//     return (\r\n//       <div>\r\n//         <h1>Phonebook</h1>\r\n//         <Phonebook addContact={this.addContact} />\r\n//         <h2>Contacts</h2>\r\n//         <Filter onChange={this.onFilterChange} filter={this.state.filter} />\r\n//         <ContactList filter={filter} onDelete={this.onDelete} />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}