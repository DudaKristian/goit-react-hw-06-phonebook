{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport shortId from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: '',\n      name: '',\n      number: ''\n    };\n    this.nameInputId = shortId.generate();\n    this.numberInputId = shortId.generate();\n    this.filterInputId = shortId.generate();\n\n    this.onInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContact = () => {\n      const contact = {\n        id: shortId.generate(),\n        name: this.state.name,\n        number: this.state.number\n      };\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [contact, ...contacts]\n        };\n      });\n    };\n\n    this.formReset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n\n    this.contactItemAdd = () => {\n      return this.filter.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.name, \" \", contact.number]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 40\n      }, this));\n    };\n\n    this.filter = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.onSubmitHandle = e => {\n      e.preventDefault();\n      this.addContact();\n      this.formReset();\n    };\n  }\n\n  render() {\n    const filter = this.filter();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitHandle,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true,\n            value: this.state.name,\n            onChange: this.onInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            value: this.state.number,\n            id: this.numberInputId,\n            onChange: this.onInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.filterInputId,\n        children: [\"Find contacts by name \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          id: this.filterInputId,\n          onChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.contactItemAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","shortId","App","Component","state","contacts","id","name","number","filter","nameInputId","generate","numberInputId","filterInputId","onInputChange","e","value","target","setState","addContact","contact","formReset","contactItemAdd","map","normalizedFilter","toLowerCase","includes","onSubmitHandle","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,eAAnB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAD,EACV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,gBAAnB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OADU,EAEV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,eAAnB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAFU,EAGV;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,gBAApB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAHU,CADJ;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNF,MAAAA,IAAI,EAAE,EANA;AAONC,MAAAA,MAAM,EAAE;AAPF,KAFuB;AAAA,SAY/BE,WAZ+B,GAYjBT,OAAO,CAACU,QAAR,EAZiB;AAAA,SAa/BC,aAb+B,GAafX,OAAO,CAACU,QAAR,EAbe;AAAA,SAc/BE,aAd+B,GAcfZ,OAAO,CAACU,QAAR,EAde;;AAAA,SAiB/BG,aAjB+B,GAiBfC,CAAC,IAAI;AAEnB,YAAM;AAAER,QAAAA,IAAF;AAAQS,QAAAA;AAAR,UAAkBD,CAAC,CAACE,MAA1B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACX,IAAD,GAAQS;AAAV,OAAd;AACD,KAtB8B;;AAAA,SAwB/BG,UAxB+B,GAwBlB,MAAM;AACjB,YAAMC,OAAO,GAAG;AACdd,QAAAA,EAAE,EAAEL,OAAO,CAACU,QAAR,EADU;AAEdJ,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAFH;AAGdC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAHL,OAAhB;AAMD,WAAKU,QAAL,CAAc;AAAA,YAAC;AAAEb,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC5BA,UAAAA,QAAQ,EAAE,CAACe,OAAD,EAAU,GAAGf,QAAb;AADkB,SAAnB;AAAA,OAAd;AAGA,KAlC8B;;AAAA,SAoC/BgB,SApC+B,GAoCnB,MAAM;AAChB,WAAKH,QAAL,CACE;AACEX,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,MAAM,EAAE;AAFV,OADF;AAMD,KA3C8B;;AAAA,SA6C/Bc,cA7C+B,GA6Cd,MAAM;AACrB,aAAO,KAAKb,MAAL,CAAYc,GAAZ,CAAgBH,OAAO,iBAAK;AAAA,mBAAsBA,OAAO,CAACb,IAA9B,OAAqCa,OAAO,CAACZ,MAA7C;AAAA,SAASY,OAAO,CAACd,EAAjB;AAAA;AAAA;AAAA;AAAA,cAA5B,CAAP;AACD,KA/C8B;;AAAA,SAiD/BG,MAjD+B,GAiDtB,MAAM;AACb,YAAM;AAAEJ,QAAAA,QAAF;AAAYI,QAAAA;AAAZ,UAAuB,KAAKL,KAAlC;AACA,YAAMoB,gBAAgB,GAAGf,MAAM,CAACgB,WAAP,EAAzB;AACA,aAAOpB,QAAQ,CAACI,MAAT,CAAgBW,OAAO,IAC5BA,OAAO,CAACb,IAAR,CAAakB,WAAb,GAA2BC,QAA3B,CAAoCF,gBAApC,CADK,CAAP;AAGD,KAvD8B;;AAAA,SAyD/BG,cAzD+B,GAyDdZ,CAAC,IAAI;AACtBA,MAAAA,CAAC,CAACa,cAAF;AAEE,WAAKT,UAAL;AAEA,WAAKE,SAAL;AAED,KAhE8B;AAAA;;AAkE/BQ,EAAAA,MAAM,GAAG;AACP,UAAMpB,MAAM,GAAG,KAAKA,MAAL,EAAf;AACE,wBACE;AAAA,8BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAM,QAAA,QAAQ,EAAE,KAAKkB,cAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAE,KAAKjB,WAArB;AAAA,0CAEI;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,OAAO,EAAC,wHAHV;AAIE,YAAA,KAAK,EAAC,wIAJR;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,IANpB;AAOE,YAAA,QAAQ,EAAE,KAAKO,aAPjB;AAQE,YAAA,EAAE,EAAE,KAAKJ;AARX;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcI;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI;AAAO,UAAA,OAAO,EAAE,KAAKE,aAArB;AAAA,4CAEE;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAC,wFAHV;AAIE,YAAA,KAAK,EAAC,8FAJR;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,MANpB;AAOE,YAAA,EAAE,EAAE,KAAKI,aAPX;AAQE,YAAA,QAAQ,EAAE,KAAKE;AARjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA4BM;AAAA;AAAA;AAAA;AAAA,gBA5BN,eA6BM;AAAQ,UAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BN;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,eAqCE;AAAO,QAAA,OAAO,EAAE,KAAKD,aAArB;AAAA,0DACwB;AAAA;AAAA;AAAA;AAAA,gBADxB,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,QAAxB;AAAiC,UAAA,EAAE,EAAE,KAAKA,aAA1C;AAAyD,UAAA,QAAQ,EAAE,KAAKC;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF,eAyCE;AAAA,kBAAM,KAAKQ;AAAX;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6CD;;AAjH4B;;AAoHjC,eAAepB,GAAf","sourcesContent":["import React from \"react\"\r\nimport shortId from \"shortid\"\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  nameInputId = shortId.generate();\r\n  numberInputId = shortId.generate();\r\n  filterInputId = shortId.generate();\r\n  \r\n\r\n  onInputChange = e => {\r\n\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value })  \r\n  }\r\n\r\n  addContact = () => {\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n    \r\n   this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n    }))\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState(\r\n      {\r\n        name: '',\r\n        number: '',\r\n      }\r\n    )\r\n  };\r\n\r\n  contactItemAdd = () => {\r\n    return this.filter.map(contact => (<li key={contact.id}>{contact.name} {contact.number}</li>))\r\n  }\r\n\r\n  filter = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  onSubmitHandle = e => {\r\n  e.preventDefault();\r\n        \r\n    this.addContact()\r\n\r\n    this.formReset()\r\n\r\n  };\r\n  \r\n  render() {\r\n    const filter = this.filter();\r\n      return (\r\n        <div>\r\n\r\n        <h1>Phonebook</h1> \r\n\r\n        <form onSubmit={this.onSubmitHandle}>\r\n          <label htmlFor={this.nameInputId}>\r\n            Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onInputChange}\r\n                id={this.nameInputId}\r\n              />\r\n          </label>\r\n            <br />\r\n            <label htmlFor={this.numberInputId}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                required\r\n                value={this.state.number}\r\n                id={this.numberInputId}\r\n                onChange={this.onInputChange}\r\n            />\r\n            </label>\r\n              <br />\r\n              <button type = \"submit\">Add contact</button>\r\n          \r\n          </form>\r\n          <h2>Contacts</h2>\r\n          <label htmlFor={this.filterInputId}>\r\n            Find contacts by name <br />\r\n            <input type=\"text\" name=\"filter\" id={this.filterInputId} onChange={this.onInputChange} />\r\n          </label>\r\n          <ul>{ this.contactItemAdd }</ul>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}