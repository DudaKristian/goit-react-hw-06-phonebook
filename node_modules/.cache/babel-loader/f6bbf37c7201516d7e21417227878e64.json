{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Phonebook from \"./Phonebook/Phonebook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.onFilterChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContact = data => {\n      const contactName = this.state.contacts.map(contact => contact.name.toLowerCase());\n\n      if (!contactName.includes(data.name.toLowerCase())) {\n        this.setState(_ref => {\n          let {\n            contacts\n          } = _ref;\n          return {\n            contacts: [data, ...contacts]\n          };\n        });\n      } else {\n        return alert(`${data.name} is allready in contacts`);\n      }\n    };\n\n    this.filter = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.onDelete = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    this.setState({\n      contacts: parsedContacts\n    });\n  }\n\n  render() {\n    const filter = this.filter();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Phonebook, {\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onChange: this.onFilterChange,\n        filter: this.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        filter: filter,\n        onDelete: this.onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","ContactList","Filter","Phonebook","App","Component","state","contacts","filter","onFilterChange","e","name","value","target","setState","addContact","data","contactName","map","contact","toLowerCase","includes","alert","normalizedFilter","onDelete","id","prevState","componentDidUpdate","prevProps","localStorage","setItem","JSON","stringify","componentDidMount","parsedContacts","parse","getItem","render"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Phonebook from \"./Phonebook/Phonebook\";\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  }\r\n\r\n  onFilterChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value })\r\n  };\r\n  \r\n  addContact = data => {\r\n    const contactName =\r\n      this.state.contacts.map(contact =>\r\n      contact.name.toLowerCase())\r\n    if (!contactName.includes(data.name.toLowerCase())) {\r\n      this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n      }))\r\n    }\r\n    else {\r\n      return alert(`${data.name} is allready in contacts`)\r\n    } \r\n    \r\n  };\r\n\r\n  filter = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n  \r\n  onDelete = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n    }))\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n  }\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"))\r\n    this.setState({contacts: parsedContacts})\r\n  }\r\n\r\n  render() {\r\n    const filter = this.filter();\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Phonebook addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={this.onFilterChange} filter={this.filter} />\r\n        <ContactList filter={filter} onDelete={this.onDelete} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}