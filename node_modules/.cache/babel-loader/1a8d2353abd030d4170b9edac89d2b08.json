{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport shortId from \"shortid\";\nimport Phonebook from \"./Phonebook/Phonebook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: '',\n      name: '',\n      number: ''\n    };\n    this.nameInputId = shortId.generate();\n    this.numberInputId = shortId.generate();\n    this.filterInputId = shortId.generate();\n\n    this.onInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContact = () => {\n      const contact = {\n        id: shortId.generate(),\n        name: this.state.name,\n        number: this.state.number\n      };\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [contact, ...contacts]\n        };\n      });\n    };\n\n    this.formReset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n\n    this.filter = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.onSubmitHandle = e => {\n      e.preventDefault();\n      this.addContact();\n      this.formReset();\n    };\n  }\n\n  render() {\n    const filter = this.filter();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Phonebook, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.filterInputId,\n        children: [\"Find contacts by name \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          id: this.filterInputId,\n          onChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filter.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.name, \" \", contact.number]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","shortId","Phonebook","App","Component","state","contacts","id","name","number","filter","nameInputId","generate","numberInputId","filterInputId","onInputChange","e","value","target","setState","addContact","contact","formReset","normalizedFilter","toLowerCase","includes","onSubmitHandle","preventDefault","render","map"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport shortId from \"shortid\"\r\nimport Phonebook from \"./Phonebook/Phonebook\";\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  nameInputId = shortId.generate();\r\n  numberInputId = shortId.generate();\r\n  filterInputId = shortId.generate();\r\n  \r\n\r\n  onInputChange = e => {\r\n\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value })  \r\n  }\r\n\r\n  addContact = () => {\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n    \r\n   this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n    }))\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState(\r\n      {\r\n        name: '',\r\n        number: '',\r\n      }\r\n    )\r\n  };\r\n\r\n  filter = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  onSubmitHandle = e => {\r\n  e.preventDefault();\r\n        \r\n    this.addContact()\r\n\r\n    this.formReset()\r\n\r\n  };\r\n  \r\n  render() {\r\n    const filter = this.filter();\r\n\r\n    return (\r\n      <div>\r\n\r\n      <Phonebook />\r\n        \r\n          <h2>Contacts</h2>\r\n          <label htmlFor={this.filterInputId}>\r\n            Find contacts by name <br />\r\n            <input type=\"text\" name=\"filter\" id={this.filterInputId} onChange={this.onInputChange} />\r\n          </label>\r\n          <ul>{ filter.map(contact => (<li key={contact.id}>{contact.name} {contact.number}</li>)) }</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}